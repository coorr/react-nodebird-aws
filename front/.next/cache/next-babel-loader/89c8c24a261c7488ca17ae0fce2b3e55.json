{"ast":null,"code":"import React, { useState } from 'react';\nimport Slick from 'react-slick';\nimport { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from './styles.js';\nimport { backUrl } from '../../config/config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return /*#__PURE__*/_jsxs(Overlay, {\n    children: [/*#__PURE__*/_jsx(Global, {}), /*#__PURE__*/_jsxs(Header, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"\n      }), /*#__PURE__*/_jsx(CloseBtn, {\n        onClick: onClose,\n        children: \"X\"\n      })]\n    }), /*#__PURE__*/_jsx(SlickWrapper, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Slick, {\n          initialSlide: 0,\n          afterChange: function afterChange(slide) {\n            return setCurrentSlide(slide);\n          },\n          infinite: true // 마지막에서 다시 첫번째로\n          ,\n          arrows: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          children: images.map(function (v) {\n            return /*#__PURE__*/_jsx(ImgWrapper, {\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: v.src,\n                alt: v.src\n              })\n            }, v.src);\n          })\n        }), /*#__PURE__*/_jsx(Indicator, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [currentSlide + 1, ' ', \"/\", images.length]\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/sysone/Desktop/react-next/front/src/components/ImagesZoom/index.js"],"names":["React","useState","Slick","Overlay","Global","Header","CloseBtn","ImgWrapper","Indicator","SlickWrapper","backUrl","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwDC,SAAxD,EAAmEC,YAAnE,QAAuF,aAAvF;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAsB;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AACvC,kBAA0CZ,QAAQ,CAAC,CAAD,CAAlD;AAAA,MAAOa,YAAP;AAAA,MAAuBC,eAAvB;;AACA,sBACE,MAAC,OAAD;AAAA,4BACE,KAAC,MAAD,KADF,eAEE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,OAAnB;AAAA;AAAA,QAFF;AAAA,MAFF,eAME,KAAC,YAAD;AAAA,6BACE;AAAA,gCACE,KAAC,KAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,mBAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,WAFf;AAGE,UAAA,QAAQ,MAHV,CAGW;AAHX;AAIE,UAAA,MAAM,EAAE,KAJV;AAKE,UAAA,YAAY,EAAE,CALhB;AAME,UAAA,cAAc,EAAE,CANlB;AAAA,oBAQGJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD;AAAA,gCACV,KAAC,UAAD;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAiB,gBAAA,GAAG,EAAED,CAAC,CAACC;AAAxB;AADF,eAAiBD,CAAC,CAACC,GAAnB,CADU;AAAA,WAAX;AARH,UADF,eAeE,KAAC,SAAD;AAAA,iCACE;AAAA,uBACGL,YAAY,GAAG,CADlB,EAEG,GAFH,OAIGF,MAAM,CAACQ,MAJV;AAAA;AADF,UAfF;AAAA;AADF,MANF;AAAA,IADF;AAmCD,CArCD;;AA4CA,eAAeT,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Slick from 'react-slick'\r\nimport { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from './styles.js'\r\nimport  {backUrl}  from '../../config/config'\r\n\r\n\r\n\r\nconst ImagesZoom = ({images,onClose}) => {\r\n  const [currentSlide  , setCurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Global />\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn onClick={onClose} >X</CloseBtn>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick \r\n            initialSlide={0}\r\n            afterChange={(slide) => setCurrentSlide(slide)}\r\n            infinite // 마지막에서 다시 첫번째로\r\n            arrows={false}\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n          >\r\n            {images.map((v) => (\r\n              <ImgWrapper key={v.src}>\r\n                <img src={v.src} alt={v.src} />\r\n              </ImgWrapper>\r\n            ))}\r\n          </Slick>\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1} \r\n              {' '}\r\n              /\r\n              {images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}